USE QLPhongKham

GO
CREATE PROC themHoSoBenhNhan
	@PHONE_NUMBER NVARCHAR(15), 
	@DENTIST_ID INT,
	@DATE_TIME DATETIME,
	@DIAGNOSTIC NVARCHAR(100),
	@SYMPTOM NVARCHAR(50),
	@ADVICE NVARCHAR(100)
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			DECLARE @CUSTOMER_ID INT;
			SELECT @CUSTOMER_ID = ID FROM CUSTOMER C WHERE C.phoneNumber = @PHONE_NUMBER;
			--CHECK CUSTOMER
			IF NOT EXISTS (
				SELECT 1
				FROM CUSTOMER C WHERE C.id = @CUSTOMER_ID	
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI ID KHÁCH HÀNG'
				ROLLBACK TRAN
			END
			--CHECK DENTIST
			IF NOT EXISTS (
				SELECT 1
				FROM DENTIST D WHERE D.id = @DENTIST_ID	
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI ID BÁC SĨ'
				ROLLBACK TRAN
			END
			INSERT INTO PATIENT_RECORD(symptom, advice, diagnostic, date_time, dentistId, customerId) VALUES (@SYMPTOM, @ADVICE, @DIAGNOSTIC, @DATE_TIME, @DENTIST_ID, @CUSTOMER_ID)
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		ROLLBACK TRAN
	END CATCH
END


GO
CREATE PROC themHoaDon
	@RECORD_ID INT, 
	@DATE_TIME DATETIME,
	@STATUS NVARCHAR(30),
	@TOTAL FLOAT
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			--CHECK RECORD ID
			IF NOT EXISTS (
				SELECT 1
				FROM PATIENT_RECORD PR WHERE PR.id = @RECORD_ID	
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI HỒ SƠ BỆNH NHÂN'
				ROLLBACK TRAN
			END
			INSERT INTO INVOICE(recordId, date_time, status, total) VALUES (@RECORD_ID, @DATE_TIME, @STATUS, @TOTAL)
			COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		ROLLBACK TRAN
	END CATCH
END

GO
CREATE PROC thanhToanHoaDon
	@INVOICE_ID INT, 
	@STAFF_ID INT
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			--CHECK INVOICE ID
			IF NOT EXISTS (
				SELECT 1
				FROM INVOICE I WHERE I.id = @INVOICE_ID	
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI INVOICE ID'
				ROLLBACK TRAN
			END
			--CHECK STAFF ID
			IF NOT EXISTS (
				SELECT 1
				FROM STAFF S WHERE S.id = @STAFF_ID	
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI STAFF ID'
				ROLLBACK TRAN
			END

			UPDATE INVOICE SET status = N'Đã thanh toán' WHERE ID = @INVOICE_ID
			INSERT INTO INVOICE(staffId) VALUES (@STAFF_ID)
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		ROLLBACK TRAN
	END CATCH
END


GO
CREATE PROC themDonThuoc
    @RECORD_ID INT,
    @MEDICINE_ID INT,
    @QUANTITY INT
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
			DECLARE @PRICE FLOAT;
			SELECT @PRICE = price * @QUANTITY FROM MEDICINE M WHERE M.ID = @MEDICINE_ID;
	
			DECLARE @MEDICINE_NAME NVARCHAR(30);
			SELECT @MEDICINE_NAME = name FROM MEDICINE M WHERE M.id = @MEDICINE_ID
	
			DECLARE @MEDICINE_STOCK INT;
			SELECT @MEDICINE_STOCK = quantity FROM MEDICINE M WHERE M.ID = @MEDICINE_ID;
			-- CHECK PATIENT RECORD ID
			IF NOT EXISTS (
				SELECT 1
				FROM PATIENT_RECORD PR
				WHERE PR.ID = @RECORD_ID
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI RECORD ID';
				ROLLBACK TRAN;
			END

			-- CHECK MEDICINE ID
			IF NOT EXISTS (
				SELECT 1
				FROM MEDICINE M
				WHERE M.ID = @MEDICINE_ID
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI MEDICINE ID';
				ROLLBACK TRAN;		
			END
			-- UPDATE QUANTITY OF MEDICINE IN STOCK
			UPDATE MEDICINE SET quantity = CASE WHEN @MEDICINE_STOCK >= @QUANTITY THEN @MEDICINE_STOCK - @QUANTITY ELSE 0 END WHERE ID = @MEDICINE_ID;
			-- INSERT INTO PRESCRIBE_MEDICINE
			INSERT INTO PRESCRIBE_MEDICINE (recordId, medicineId, medicineName, price, quantity) VALUES (@RECORD_ID, @MEDICINE_ID, @MEDICINE_NAME, @PRICE, @QUANTITY);
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		ROLLBACK TRAN;		
	END CATCH
END

GO
CREATE PROC capNhatDonThuoc
    @RECORD_ID INT,
    @MEDICINE_ID INT,
    @QUANTITY INT
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
		--CHECK PRESCRIBE MEDICINE
			IF NOT EXISTS (
				SELECT 1
				FROM PRESCRIBE_MEDICINE pm 
				WHERE pm.medicineId = @MEDICINE_ID AND pm.recordId = @RECORD_ID
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI PRESCRIBE MEDICINE';
				ROLLBACK TRAN;		
			END
		--GET OLD QUANTITY
			DECLARE @OLD_QUANTITY INT;
			SELECT @OLD_QUANTITY = quantity FROM PRESCRIBE_MEDICINE pm WHERE pm.medicineId = @MEDICINE_ID AND pm.recordId = @RECORD_ID
		IF(@OLD_QUANTITY > @QUANTITY)
		BEGIN 
			UPDATE MEDICINE SET quantity = quantity + (@OLD_QUANTITY - @QUANTITY) WHERE id = @MEDICINE_ID
			UPDATE PRESCRIBE_MEDICINE SET quantity = @QUANTITY WHERE medicineId = @MEDICINE_ID AND recordId = @RECORD_ID
		END
		IF(@OLD_QUANTITY < @QUANTITY)
		BEGIN
			UPDATE MEDICINE SET quantity = quantity - (@QUANTITY - @OLD_QUANTITY) WHERE id = @MEDICINE_ID
			UPDATE PRESCRIBE_MEDICINE SET quantity = @QUANTITY WHERE medicineId = @MEDICINE_ID AND recordId = @RECORD_ID
		END
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		ROLLBACK TRAN;		
	END CATCH
END

GO
CREATE PROC xoaDonThuoc
    @RECORD_ID INT,
    @MEDICINE_ID INT
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
		--CHECK PRESCRIBE MEDICINE
			IF NOT EXISTS (
				SELECT 1
				FROM PRESCRIBE_MEDICINE pm 
				WHERE pm.medicineId = @MEDICINE_ID AND pm.recordId = @RECORD_ID
			)
			BEGIN
				PRINT N'LỖI: KHÔNG TỒN TẠI PRESCRIBE MEDICINE';
				ROLLBACK TRAN;		
			END

			DECLARE @QUANTITY INT;
			SELECT @QUANTITY = quantity FROM PRESCRIBE_MEDICINE WHERE medicineId = @MEDICINE_ID AND recordId = @RECORD_ID
			DELETE FROM PRESCRIBE_MEDICINE WHERE medicineId = @MEDICINE_ID AND recordId = @RECORD_ID
			UPDATE MEDICINE SET quantity = quantity + @QUANTITY WHERE id = @MEDICINE_ID

		COMMIT TRAN
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE();
		ROLLBACK TRAN;		
	END CATCH
END


GO 
EXEC capNhatDonThuoc 1,1,110

DROP PROC capNhatDonThuoc

DROP PROCEDURE themDonThuoc

SELECT * FROM MEDICINE
SELECT * FROM PATIENT_RECORD

GO
EXEC themDonThuoc 1, 1, 100

SELECT * FROM PRESCRIBE_MEDICINE

GO
EXEC xoaDonThuoc 1,1

DROP PROC xoaDonThuoc



